[{"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\index.js":"1","C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\App.js":"2","C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\reportWebVitals.js":"3","C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\navBar\\navBar.jsx":"4","C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\footer\\footer.jsx":"5","C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\quantityPicker\\quantityPicker.jsx":"6","C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\product\\index.jsx":"7","C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\catalog\\index.js":"8","C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\ToDo\\index.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":493,"mtime":1612577475802,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2312,"mtime":1612272861393,"results":"14","hashOfConfig":"11"},{"size":325,"mtime":1612271870241,"results":"15","hashOfConfig":"11"},{"size":1090,"mtime":1612564733614,"results":"16","hashOfConfig":"11"},{"size":1144,"mtime":1612575922668,"results":"17","hashOfConfig":"11"},{"size":659,"mtime":1612570040371,"results":"18","hashOfConfig":"11"},{"size":3971,"mtime":1612712430207,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ize8xy",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\index.js",[],["41","42"],"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\App.js",[],"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\reportWebVitals.js",[],"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\navBar\\navBar.jsx",[],"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\footer\\footer.jsx",[],"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\quantityPicker\\quantityPicker.jsx",[],["43","44"],"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\product\\index.jsx",[],"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\catalog\\index.js",[],"C:\\Users\\acer\\Desktop\\reactStore\\reactjs\\src\\components\\ToDo\\index.jsx",["45"],"import React, { Component } from 'react';\r\n\r\nimport  \"./ToDo.css\";\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        newItem: \"\",\r\n        list: []\r\n      };\r\n    }\r\n  \r\n    //incorporating local storage \r\n    componentDidMount() {\r\n      this.hydrateStateWithLocalStorage();\r\n  \r\n      // add event listener to save state to localStorage\r\n      // when user leaves/refreshes the page\r\n      window.addEventListener(\r\n        \"beforeunload\",\r\n        this.saveStateToLocalStorage.bind(this)\r\n      );\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      window.removeEventListener(\r\n        \"beforeunload\",\r\n        this.saveStateToLocalStorage.bind(this)\r\n      );\r\n  \r\n      // saves if component has a chance to unmount\r\n      this.saveStateToLocalStorage();\r\n    }\r\n  \r\n    hydrateStateWithLocalStorage() {\r\n      // for all items in state\r\n      for (let key in this.state) {\r\n        // if the key exists in localStorage\r\n        if (localStorage.hasOwnProperty(key)) {\r\n          // get the key's value from localStorage\r\n          let value = localStorage.getItem(key);\r\n  \r\n          // parse the localStorage string and setState\r\n          try {\r\n            value = JSON.parse(value);\r\n            this.setState({ [key]: value });\r\n          } catch (e) {\r\n            // handle empty string\r\n            this.setState({ [key]: value });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    saveStateToLocalStorage() {\r\n      // for every item in React state\r\n      for (let key in this.state) {\r\n        // save to localStorage\r\n        localStorage.setItem(key, JSON.stringify(this.state[key]));\r\n      }\r\n    }\r\n  \r\n    updateInput(key, value) {\r\n      // update react state\r\n      this.setState({ [key]: value });\r\n    }\r\n  \r\n    addItem() {\r\n      // create a new item with unique id\r\n      const newItem = {\r\n        id: 1 + Math.random(),\r\n        value: this.state.newItem.slice()\r\n   \r\n      };\r\n  \r\n      // copy current list of items\r\n      const list = [...this.state.list];\r\n  \r\n      // add the new item to the list\r\n      list.push(newItem);\r\n  \r\n      // update state with new list, reset the new item input\r\n      this.setState({\r\n        list,\r\n        newItem: \"\"\r\n      });\r\n    }\r\n  \r\n    deleteItem(id) {\r\n      // copy current list of items\r\n      const list = [...this.state.list];\r\n      // filter out the item being deleted\r\n      const updatedList = list.filter(item => item.id !== id);\r\n  \r\n      this.setState({ list: updatedList });\r\n    }\r\n    \r\n    render() {\r\n      return (\r\n        <div>\r\n  \r\n        <h1 className=\"app-title\">MY LIST</h1>\r\n          \r\n          <div className=\"container\">\r\n          <div\r\n            style={{\r\n              padding: 30,\r\n              textAlign: \"left\",\r\n              maxWidth: 500,\r\n              margin: \"auto\"\r\n            }}\r\n          >\r\n            Add an Item...\r\n            <br />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Type item here\"\r\n              value={this.state.newItem}\r\n              onChange={e => this.updateInput(\"newItem\", e.target.value)}\r\n            />\r\n            <button\r\n              className=\"add-btn btn-floating\"\r\n              onClick={() => this.addItem()}\r\n              disabled={!this.state.newItem.length}\r\n            >\r\n              <i class=\"material-icons\"> + </i>\r\n            </button>\r\n            <br /> <br />\r\n            <ul>\r\n              {this.state.list.map(item => {\r\n                return (\r\n                  <li key={item.id}>\r\n                    {item.value}\r\n                    <button className=\"btn btn-floating\" onClick={() => this.deleteItem(item.id)}>\r\n                      <i class=\"material-icons\">x</i>\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\nexport default App;\r\n\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]